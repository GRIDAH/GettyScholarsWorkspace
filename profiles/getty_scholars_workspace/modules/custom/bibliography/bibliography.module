<?php
/**
 * @file
 * Code for the Bibliography feature.
 */

include_once 'bibliography.features.inc';

/**
 * Implements hook_menu().
 */
function bibliography_menu() {
  $items['project/%/bibliography'] = array(
    'title' => 'Bibliography',
    'title callback' => 'bibliography_page_title_callback',
    'page callback' => 'bibliography_list',
    'page arguments' => array(1),
    'access callback' => 'og_user_access',
    'access arguments' => array('node', 1, 'unsubscribe'),
  );

  return $items;
}

function bibliography_page_title_callback($title) {
  $gid = arg(1);
  $group = node_load($gid);

  return $group->title . ' ' . $title;
}

function bibliography_list($gid) {
  $output = '';
  $attachment_before = array();
  if (og_user_access('node', $gid, 'create bibliography content')) {
    $attachment_before[] = l(t('Add new citation'), "node/add/bibliography/$gid");
  }
  if (og_user_access('node', $gid, 'create bibliography content') && feeds_access('import', 'bibliography')) {
    $attachment_before[] = l(t('Import citation'), "import/bibliography/$gid");
  }
  $output .= implode('<br>', $attachment_before);
  $output .= views_embed_view('bibliography', 'block_bibliography_list', $gid);
  return $output;
}

/**
 * Add reset link to bibliography exposed filter form
 */
function bibliography_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && !empty($form['reset'])) {
    $form['reset']['#access'] = !empty($form_state['view']->exposed_input);
  }
}
