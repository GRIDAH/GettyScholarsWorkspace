// Generated by CoffeeScript 1.6.2
(function() {
  var $, Settings;

  $ = jQuery;

  Settings = Drupal.settings.scribe_tagger;

  Drupal.behaviors.ScribeAnnotatorTags = {
    attach: function(context, settings) {
      var annotator, name, opts, _ref, _results;

      opts = {
        minLength: 0,
        source: this.source,
        multiple: true,
        focus: this.focus,
        select: this.select,
        open: this.open
      };
      _ref = Drupal.annotator;
      _results = [];
      for (name in _ref) {
        annotator = _ref[name];
        if ((annotator.data('annotator') != null) && (Drupal.settings.scribe_tagger != null)) {
          annotator.annotator('addPlugin', 'DrupalTags');
          annotator.data('annotator').plugins.DrupalTags.input.autocomplete(opts);
          if (name === 'image') {
            _results.push(annotator.data('annotator').plugins.DrupalStoreImage.fields.annotation.push('field_annotation_tags'));
          } else {
            _results.push(annotator.data('annotator').plugins.DrupalStore.fields.annotation.push('field_annotation_tags'));
          }
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    },
    source: function(request, response) {
      return response($.ui.autocomplete.filter(Settings.term_autocomplete, Drupal.behaviors.ScribeAnnotatorTags.extractLast(request.term)));
    },
    focus: function() {
      return false;
    },
    select: function(event, ui) {
      var terms;

      terms = Drupal.behaviors.ScribeAnnotatorTags.split(this.value);
      terms.pop();
      terms.push(ui.item.value);
      terms.push("");
      this.value = terms.join(", ");
      return false;
    },
    split: function(val) {
      return val.split(/,\s*/);
    },
    extractLast: function(term) {
      return this.split(term).pop();
    },
    open: function() {
      $(this).autocomplete('widget').css('z-index', 20000);
      return false;
    }
  };

}).call(this);
