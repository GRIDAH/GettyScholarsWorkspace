// Generated by CoffeeScript 1.7.1
(function() {
  var $,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $ = jQuery;

  Annotator.Plugin.EnhancedPosition = (function(_super) {
    __extends(EnhancedPosition, _super);

    function EnhancedPosition(element, options) {
      EnhancedPosition.__super__.constructor.apply(this, arguments);
    }

    EnhancedPosition.prototype.pluginInit = function() {
      if (!Annotator.supported()) {
        return;
      }
      this.annotator.showEditor = this.showEditor;
      this.annotator.showViewer = this.showViewer;
      return this.annotator.calculateViewportPosition = this.calculateViewportPosition;
    };

    EnhancedPosition.prototype.showEditor = function(annotation, location) {
      var scrollLeft, scrollTop;
      location.position = 'fixed';
      scrollTop = $(window).scrollTop();
      scrollLeft = $(window).scrollLeft();
      location.top = location.top - scrollTop;
      location.left = location.left - scrollLeft;
      this.editor.element.css(location);
      this.editor.load(annotation);
      this.publish('annotationEditorShown', [this.editor, annotation]);
      return this;
    };

    EnhancedPosition.prototype.showViewer = function(annotations, location) {
      this.viewer.element.css(this.calculateViewportPosition(location));
      this.viewer.load(annotations);
      return this.publish('annotationViewerShown', [this.viewer, annotations]);
    };

    EnhancedPosition.prototype.calculateViewportPosition = function(location) {
      var leftPos, newLocation, offset, scrollLeft, scrollTop, topPos;
      scrollTop = $(window).scrollTop();
      scrollLeft = $(window).scrollLeft();
      offset = this.wrapper.offset();
      topPos = location.top + offset.top - scrollTop;
      leftPos = location.left + offset.left - scrollLeft;
      return newLocation = {
        position: 'fixed',
        top: topPos,
        left: leftPos
      };
    };

    return EnhancedPosition;

  })(Annotator.Plugin);

}).call(this);
