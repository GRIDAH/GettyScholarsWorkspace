<?php

include_once("inc/array2xml.php");


/**
 *  Implements hook_menu().
 */
function getty_expose_project_menu() {
  $items = array();

  $handler = array(
    'type' => MENU_CALLBACK,
    'page callback' => '_getty_expose_project_url_handler',
    'page arguments' => array(2),
    'access arguments' => array('access project service'),
  );

  //add admin config form
  $items['admin/config/getty-expose'] = array(
    'title' => t('Getty - Expose Project Configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('getty_expose_project_admin_form'),
    'file' => 'forms/getty_expose_project.admin.inc',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM
  );

  $project_path = variable_get('getty_expose_project_service_url', 'service/projects');
  if (!empty($project_path)) {
    $items[$project_path] = $items[$project_path . '/%'] = $handler;
  }

  $items['project/%/export'] = array(
    'title' => 'Export Content',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('getty_expose_project_select_form', 1),
    'file' => 'forms/getty_expose_project.admin.inc',
    'access callback' => 'og_user_access',
    'access arguments' => array('node', 1, 'unsubscribe'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['project/%/export/all/%'] = array(
    'title' => 'Export Content',
    'page callback' => 'export_project_page',
    'page arguments' => array(1, 4),
    'access callback' => 'og_user_access',
    'access arguments' => array('node', 1, 'unsubscribe'),
    'type' => MENU_CALLBACK,
  );

  $items['node/%/export/%'] = array(
    'page callback' => 'export_node_page',
    'page arguments' => array(1, 3),
    'access callback' => 'node_access',
    'access arguments' => array('view', 1),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 *  Implements hook_permission().
 */
function getty_expose_project_permission() {
  return array(
    //allows users to download the files
    'access project service' => array(
      'title' => t('Access To Getty Project Service'),
      'description' => t('Allow users to access project service')
    )
  );
}

/**
 * Implements hook_library().
 */
function getty_expose_project_library() {
  $libraries['datatables'] = array(
    'title' => 'DataTables',
    'website' => 'https://datatables.net/',
    'version' => '1.10.12',
    'js' => array(
      'sites/all/libraries/datatables/media/js/jquery.dataTables.min.js' => array(),
    ),
  );
  $libraries['chosen'] = array(
    'title' => 'Chosen',
    'website' => 'https://github.com/harvesthq/chosen',
    'version' => '1.1.0',
    'js' => array(
      'sites/all/libraries/chosen/chosen.jquery.min.js' => array(),
    ),
    'css' => array(
      'sites/all/libraries/chosen/chosen.min.css' => array(),
    ),
  );
  $libraries['waypoints'] = array(
    'title' => 'Waypoints',
    'website' => 'https://github.com/imakewebthings/waypoints',
    'version' => '4.0.1',
    'js' => array(
      'sites/all/libraries/waypoints/lib/jquery.waypoints.min.js' => array(),
      'sites/all/libraries/waypoints/lib/shortcuts/sticky.min.js' => array(),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_theme().
 */
function getty_expose_project_theme($existing, $type, $theme, $path) {
  return array(
    'getty_expose_project_select_form' => array(
      'render element' => 'form',
      'template' => 'getty-expose-project-select-form',
    ),
  );
}

/**
 * Implements hook_node_view().
 */
function getty_expose_project_node_view($node, $view_mode, $langcode) {
  $node->content['export_link'] = array(
    '#markup' => '
      <div class="dropdown-container node-export-container">
        <a href="#" class="dropdown-trigger">' . t('Export') . '</a>
        <div class="dropdown-content">
          ' . l(t('JSON'), "node/$node->nid/export/json") . '
          ' . l(t('CSV'), "node/$node->nid/export/csv") . '
          ' . l(t('XML'), "node/$node->nid/export/xml") . '
        </div>
      </div>
    ',
    '#weight' => 1000,
  );
}

/**
 *  @function:
 *    This function is a custom handler for oembed requests
 */
function _getty_expose_project_url_handler($format = '') {
  $project_id = (isset($_GET['project'])) ? $_GET['project'] : '';

  //defaults which format to use if none is provided
  if (empty($format)) {
    $format = empty($_GET['format']) ? 'json' : $_GET['format'];
  }

  //creates new object and echos the output out
  $project = new getty_project($project_id, $format);
  echo $project->get_output();

  drupal_exit();
}

function getty_expose_project_select_form_submit($form, &$form_state) {
  $nids = array();
  foreach ($form_state['values']['nids'] as $type => $type_nids) {
    $nids += array_filter($type_nids);
  }
  switch ($form_state['clicked_button']['#value']) {
    case 'CSV':
      $format = 'csv';
      break;
    case 'XML':
      $format = 'xml';
      break;
    case 'JSON':
    default:
      $format = 'json';
  }

  $project = new getty_project($nids, $format);
  echo $project->get_output(TRUE);
  drupal_exit();
}

function export_node_page($nid, $format) {
  $project = new getty_project(array($nid), $format);
  echo $project->get_output(TRUE);
  drupal_exit();
}

function export_project_page($nid, $format) {
  $project = new getty_project($nid, $format);
  echo $project->get_output(TRUE);
  drupal_exit();
}

function template_preprocess_getty_expose_project_select_form(&$vars) {
  drupal_add_library('getty_expose_project', 'chosen');
  drupal_add_library('getty_expose_project', 'datatables');
  drupal_add_library('getty_expose_project', 'waypoints');
  drupal_add_js(drupal_get_path('module', 'getty_expose_project') . '/getty-expose-project-select-form.js');
}

function getty_expose_project_preprocess_node(&$vars) {
  if (!empty($vars['node']->is_export)) {
    $vars['page'] = TRUE;
    $vars['display_submitted'] = FALSE;
  }
}
